  _______    ____    _____     ____        
 |__   __|  / __ \  |  __ \   / __ \     _ 
    | |    | |  | | | |  | | | |  | |   (_)
    | |    | |  | | | |  | | | |  | |      
    | |    | |__| | | |__| | | |__| |    _ 
    |_|     \____/  |_____/   \____/    (_)

P0:
- update README
- integration tests
  - probably api_test.ts
- figure out how to differentiate between two types of payments from one person
  meant for two different spreadsheets
  - add tests
- abriel car loan
- don't require monthly interest day for 0-interest loans
- fix validation failure error reporing during client sheet registration
  - Maybe use Util.isError from JAS_Lib
  - Test by having a 0-interest sheet with no monthly interest day
- add updateStatusCell option in spreadsheet UI menu
- check for bug in email parsing
  - receive email
  - respond to email with message that has no deposit text in it
  - does this second message get parsed as a deposit?


P1:
- read all emails, and ask admin to verify emails that should be parsed
- Move client projects off of dev mode to versioned library
- More comments everywhere
- Allow inserting row at correct date in balance sheet using date passed in to
  insertRow()
- validate config on edit
  - with a config valid checkbox!
  - labels. maybe a custom label name in config
- if interest and payment are the same date, make payment be before interest
- optimize Config.get
  - maybe only call it once per method
    - some way to cache the current Config
  - read the entire sheet and operate on it, rather than reading every cell one
    at a time
- make doDailyUpdate idempotent
  - check if rent or interest was already applied
- static file analysis
  - no 'this' in ts files


P2:
- option to add partial payment
  - EmailChecker can do this, but maybe should be possible in the UI
- use dropdown list to select payment types in sheet config
- allow disabling outgoing emails in the config
- Add config for the payment label in balance sheet. e.g. "Car payment"
- Add a log in the spreadsheet, showing recent events
- make addPayment idempotent
  - add gmail message id in invisible column?

P3:
- integrate with Plaid to *maybe* get Zelle Ids  
- automated way to unregister deleted clients, or really, any good way to
  unregister.
- mark L tests and make running them optional

P4
- we get message date to use as transaction date. this date isn't always
  correct. in one example, email timestamp EST is day X at 2:43am, but
  message.getDate() is apparently day X-1
- global.d.ts
- tsconfig


  _____     ____    _   _   ______     
 |  __ \   / __ \  | \ | | |  ____|  _ 
 | |  | | | |  | | |  \| | | |__    (_)
 | |  | | | |  | | | . ` | |  __|      
 | |__| | | |__| | | |\  | | |____   _ 
 |_____/   \____/  |_| \_| |______| (_)

P0:
- config.ts to parse the config sheet
- get date from email to add payment, instead of assuming today
- add loan/interest features
- generalize terminology in code and config
- put spreadsheetId in new LibContext (research life cycle)
- integrate into live sheets
- restructure triggers
  - only the lib has triggers
  - scripts that depend on the lib register
- fix afterAll and configtest
- For every 5 minute 'check labeled Emails', first check if there are any
    labeled emails, then open every spreadsheet.
- All product code tested!!! 
- All test framework code tested!!! 
- sheet validations
  - correctly named sheets, maybe columns
  - probably better to run some unit tests against the sheet (obsolete)
  - require validation when registering sheet
    - add BalanceSheet validation
- when checking an email fails, add a Failed Label (obsolete)
- if updating Labels fails, add to Properties
  - don't try to check emails for failed messages in Properties
- refactor out general AS lib
  - generate typescript types declaration:
    https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html
  - claspignore
    - test files
    - whatever else comes up in clasp --watch
  - the imported library name in AS editor ui maybe must match the namespace name
    - in TS declarations
- ensure all client sheets have permissions
- fix printing dollar amounts: e.g. "$-500" in new balance thank you email
- if processing an email fails, mark it with a new failed label. don't process
  - failed emails
- when iterating over labeled emails, stop checking processed emails in future
  sheets. bail early when done.
  - 1) gmail says 2 threads have 'process pending' label
  - 2) one sheet processes one thread
  - 3) future sheets only need to process the remaining thread
  - 4) once all threads are processed, stop
- different color for per-sheet labels

P1:
- add option to add a full payment
- scheduled addition of rent due entry
- option to send thanks for your payment email
- parse email to input payments
- accommodate 0-interest loan
- Ensure email search ignores case
- Only make balace red in email for rent, not for loans
- implement unit test framework
- unit tests
    - setConfigForTest
    - see how costly it is to use a temp sheet for all test runs
        - beforeEach and afterEach are arrays of functions
    - test the Tester
- better trigger versioning (obsolete)
- Validate email address format
- implement xit and xdescribe
- suppress logs during tests
- implement expectation.not
- Only show 'See balance sheet' in email if at least link href is in Config
- Set the header rows of Balance Sheet and Config to be imported ranges from
  the template
  - might be a problem with merged ranges (not a problem)
- status at the top of the sheet
  - current balance
  - next interest date / next rent due date
  - `With continued monthly payments of ${amount}, this will be done ${date}`
  - can be done in one big merged cell. at least in thebut programatically?
- make 0 balance green for rent
- set Google Sans font everywhere

P2:
- instead of checking emails, let manual step be to label emails. script do the
  rest
- Add email display name to config for outgoing emails
- maybe manage triggers programatically?
  - https://developers.google.com/apps-script/reference/script/trigger-builder

P3:
- remove Zelle ID from balance row interface
